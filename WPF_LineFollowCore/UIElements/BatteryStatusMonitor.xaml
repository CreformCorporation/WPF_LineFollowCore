<UserControl x:Class="UIElements.BatteryStatusMonitor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:converters="clr-namespace:ValueConverters"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="800" Background="White" Name="BatteryGridControl">
    <UserControl.Resources>
        <ListView x:Key="ListViewResource" x:Shared="False" 
                  Visibility="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Items.Count, Converter={converters:CountToVisibilityCollapsedConverter}}"
                  Width="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.BatteryGridWidth}"
            ItemsSource="{Binding Mode=OneWay}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsVisibleChanged="BatteryListView_IsVisibleChanged">
            <ListView.Resources>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
                
            </ListView.Resources>
            <ListView.View>
                <GridView AllowsColumnReorder="False" ColumnHeaderToolTip="Battery Levels">
                    <!--AGV number-->
                    <GridViewColumn Header="AGV#">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock HorizontalAlignment="Stretch" Text="{Binding AGVNumber, Mode=OneWay}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <!--AGV type-->
                    <GridViewColumn Header="Type">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock HorizontalAlignment="Stretch" Text="{Binding Type, Mode=OneWay}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <!--BatteryLevel-->
                    <GridViewColumn Header="Battery">
                        <!--
                        <GridViewColumn.HeaderContainerStyle>
                            <Style TargetType="GridViewColumnHeader">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                        </GridViewColumn.HeaderContainerStyle>-->
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinWidth="100" MinHeight="20" MaxHeight="20">
                                    <ProgressBar Maximum="100" Minimum="0" IsIndeterminate="False" Value="{Binding BatteryPercent, Mode=OneWay}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" Foreground="{Binding BatteryPercent, Mode=OneWay, Converter={converters:BattPercentToGlossyBattStatusColor}}" />
                                    <TextBlock VerticalAlignment="Stretch" HorizontalAlignment="Center" TextAlignment="Center"
                                               Foreground="Black" FontWeight="Bold"
                                               Visibility="{Binding IsCharging, Mode=OneWay, Converter={converters:BoolToVisVisibleConverter}}">
                                        <Run FontWeight="Bold" Text="{Binding BatteryVoltage, Mode=OneWay}"/><Run FontWeight="Bold" Text="v"/>
                                    </TextBlock>
                                    <Border>
                                        <Border.Effect>
                                            <DropShadowEffect Color="Black" Opacity="0.75" ShadowDepth="1"/>
                                        </Border.Effect>
                                        <Image Visibility="{Binding IsCharging, Mode=OneWay, Converter={converters:BoolToVisCollapsedConverter}}" Source="{StaticResource ChargeIcon}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                    <Border CornerRadius="12">
                                        <TextBlock VerticalAlignment="Stretch" HorizontalAlignment="Stretch" TextAlignment="Center"
                                                   FontSize="14" Text="AGV OFFLINE" 
                                                   Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" 
                                                   Background="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" 
                                                   Visibility="{Binding AgvAlive, Mode=OneWay, Converter={converters:BoolToVisVisibleConverter}}"/>
                                    </Border>
                                </Grid>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridView.ColumnHeaderContainerStyle>
                        <!--To prevent user from resizing rows-->
                        <Style BasedOn="{StaticResource {x:Type GridViewColumnHeader}}" TargetType="{x:Type GridViewColumnHeader}">
                            <Setter Property="IsHitTestVisible" Value="False"/>
                        </Style>
                    </GridView.ColumnHeaderContainerStyle>
                </GridView>
            </ListView.View>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.ItemContainerStyle>

        </ListView>

        <DataTemplate x:Key="TBox">
            <CheckBox IsChecked="{Binding Mode=OneWay}">
                
            </CheckBox>
        </DataTemplate>
    </UserControl.Resources>


    <Grid x:Name="GridContainer" 
          SizeChanged="GridContainer_SizeChanged" 
          MinHeight="25" MinWidth="{Binding BatteryGridWidth}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="5"/>
        </Grid.RowDefinitions>

        <!--    <ContentControl Grid.Column="0" Content="{StaticResource ListViewResource}" Name="BatteryListView" DataContext="{Binding Path=BatteryGridItemSource, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"></ContentControl> -->
<!--        
        <ContentControl Grid.Column="1" Content="{StaticResource ListViewResource}" Name="GV1ListView"></ContentControl>
        <ContentControl Grid.Column="2" Content="{StaticResource ListViewResource}" Name="GV2ListView" DataContext="{Binding Path=GridView2, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"></ContentControl>
        <ContentControl Grid.Column="3" Content="{StaticResource ListViewResource}" Name="GV3ListView" DataContext="{Binding Path=GridView3, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"></ContentControl>
-->
        <ItemsControl ItemsSource="{Binding GridViews}" Grid.Column="0" Name="GridViewStackPanel" >
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <ContentControl Content="{StaticResource ListViewResource}" DataContext="{Binding Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"></ContentControl>

                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <Border Name="Footer" Grid.Row="1" Height="5" 
                HorizontalAlignment="Stretch" 
                VerticalAlignment="Bottom"
                Background="Gray"
                MouseEnter="Footer_MouseEnter"
                MouseLeave="Footer_MouseLeave"
                MouseMove="Footer_MouseMove"
                MouseLeftButtonDown="Footer_MouseLeftButtonDown"
                MouseLeftButtonUp="Footer_MouseLeftButtonUp"/>
    </Grid>
</UserControl>
